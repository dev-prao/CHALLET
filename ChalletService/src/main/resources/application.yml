#server:
#  port: 8081

spring:
  profiles:
    active: prod # 로컬(dev) / git(prod)

---
# 로컬(dev) 환경 설정
spring:
  config:
    activate:
      on-profile: dev
    import: application-key.yml

eureka:
  instance:
    prefer-ip-address: true
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://localhost:8761/eureka

---
# 프로덕션(prod) 환경 설정
spring:
  config:
    activate:
      on-profile: prod
    import: "classpath:/application-key.yml"

eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://challet-discovery-spring:8761/eureka

---
# 공통 설정
spring:
  application:
    name: challet
  datasource:
    url: jdbc:mysql://challet.world:${dbport}/challet-api?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=Asia/Seoul&characterEncoding=UTF-8
    driver-class-name: com.mysql.cj.jdbc.Driver
    username: challet
    password: ${mysqlpassword}
    p6spy:
      enabled: true
      appender: com.p6spy.engine.spy.appender.Slf4JLogger
      logMessageFormat:
        p6spy: "%(currentTime)|%(executionTime)|%(category)|%(sqlSingleLine)"
  jpa:
    hibernate:
      ddl-auto: validate
      dialect: org.hibernate.dialect.MySQLDialect
    open-in-view: false
  elasticsearch:
    uris: "challet.world:9200"
  data:
    redis:
      host: challet.world
      port: ${redis_port}


springdoc:
  api-docs:
    version: openapi_3_1
    enabled: true
    path: api/challet/v3/api-docs
  enable-spring-security: true
  default-consumes-media-type: application/json
  default-produces-media-type: application/json

jwt:
  secret: ${jwt_secret_key}
  access-exp: ${jwt_access_exp}
  refresh-exp: ${jwt_refresh_exp}

management:
  endpoints:
    web:
      exposure:
        include: prometheus, health
  endpoint:
    prometheus:
      enabled: true
  prometheus:
    metrics:
      export:
        enabled: true

coolsms:
  api-key: ${coolsms_api_key}
  api-secret: ${coolsms_api_secret}
  sender-number: ${coolsms_sender_number}
